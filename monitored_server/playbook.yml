- hosts: localhost
  sudo: yes
  tasks:
  - name: create prometheus directory
    file: path=/Node state=directory

#  - name: install prometheus
#    unarchive:
#     src: https://github.com/prometheus/prometheus/releases/download/v1.1.3/prometheus-1.1.3.linux-amd64.tar.gz
#     dest: /Prometheus
#     copy: no

  - name: install node-exporter
    unarchive:
     src: https://github.com/prometheus/node_exporter/releases/download/0.11.0/node_exporter-0.11.0.linux-amd64.tar.gz
     dest: /Node
     copy: no

  - name: create user prometheus
    shell: sudo useradd --no-create-home --shell /bin/false prometheus

  - name: create user node_exporter
    shell: sudo useradd --no-create-home --shell /bin/false node_exporter

  - name: run node exporter as an init service
    copy:
     src: ./files/node_exporter.service
     dest: /etc/systemd/system/node_exporter.service
    
  - name: enable node exporter service on boot
    systemd:
     state: restarted
     enabled: yes
     daemon_reload: yes
     name: node_exporter 
         
  - name: update prometheus configuration
    copy:
      src: ./files/prometheus.yml
      dest: /etc/prometheus/prometheus.yml

  - name: run prometheus service as an init service
    copy:
     src: ./files/prometheus.service
     det:  /etc/systemd/system/prometheus.service

  - name: enable prometheus service on boot
    systemd:
     state: restarted
     enabled: yes
     daemon_reload: yes
     name: prometheus

  - name: install grafana dependencies
    yum:
     name: "{{ item }}"
     state: installed
    with_items:
     - apt-transport-https
     - ufw

  - name: add grafana repository
    yum_repository:
     name: grafana
     description: YUM repository
     baseurl:  https://packagecloud.io/grafana/stable/el/6/$basearch 
     enabled: yes
     gpgcheck: yes
     repo_gpgcheck: yes
     gpgkey: https://packagecloud.io/gpg.key https://grafanarel.s3.amazonaws.com/RPM-GPG-KEY-grafana

  - name: install grafana
    yum:
     name: grafana
     state: installed
     update_cache: yes
    
  - name: allow grafana port in UFW
    ufw:
     rule: allow
     port: 3000
     proto: tcp

  - name: enable and start grafana service on boot
    service:
     name: grafana-server
     state: started 
     enabled: yes                                                
